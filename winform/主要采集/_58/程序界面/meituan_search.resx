<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column9.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAyZf8EM2b/FDNm/xQzZv8UM2b/FDNm/xQzZv8OAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADNm/4AzZv/aMmX/2jJl/9oyZf/aMmX/2jNm/84yZf4iAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMmX/8FWA//+GpP//M2b//zNm//8zZv//M2b//zNm
        /3gAAAAcAAAAOAAAAAAAAAAAAAAAAAAAADAAAABMAAAACAAAACoAAAAWAAAAAAAAAB4AAABgAAAALAAA
        AHoAAABSAAAAQAAAAHQAAABwAAAAUgAAAAAAAABWAAAAIAAAAAAzZv//bJH//7fJ//8zZv//M2b//zpr
        //88bP//M2b/iAAAAC4AAADwAAAATgAAAAAAAAA4AAAA6gAAAJ4AAACEAAAAUAAAAMIAAAAgAAAAygAA
        AHIAAAB6AAAAyAAAAKYAAAByAAAApgAAAGQAAADEAAAAAAAAAJQAAAA2AAAAADNm//9kiv//z9v//zNm
        //8zZv//eJr//6C4//8zZv+IAAAABAAAAGAAAADcAAAAGAAAAMYAAABsAAAAIAAAANIAAACiAAAA2AAA
        AMoAAACcAAAALgAAAG4AAACEAAAAgAAAAFwAAABGAAAABgAAAMQAAAAAAAAAlAAAADYAAAAAM2b//0Fw
        ///p7v//cpX//0Z0///X4f//haP//zNm/4gAAAAAAAAAAAAAAJoAAACuAAAArAAAAAIAAAAAAAAAggAA
        AM4AAABAAAAA8gAAABQAAAA6AAAA6gAAAOIAAADiAAAA6AAAAFoAAAAGAAAAyAAAAEYAAACyAAAAbgAA
        ACozZv//OGr//8TT///9/f//9vj//9Xf//89bv//M2b/iAAAAAAAAAAAAAAAMgAAAPoAAABKAAAAAAAA
        AAwAAABWAAAAfAAAAAYAAAC6AAAAGgAAAD4AAACYAAAAGAAAABgAAABiAAAAdAAAAAYAAADOAAAAwgAA
        AOgAAADUAAAAdDNm//+Trv//9/n///f5///n7f//SHb//zNm//8zZv+IAAAABAAAABgAAAAiAAAA5gAA
        ADAAAAAYAAAAXAAAALIAAAAaAAAAAAAAAFAAAADIAAAARgAAALYAAABcAAAAXAAAAIgAAAB0AAAABgAA
        AMQAAABuAAAAsgAAAJoAAAAyOmv//+Tq//+Xsf//la///+zw//9Sff//M2b//zNm/4gAAAAgAAAA6AAA
        AOgAAAD6AAAA6AAAAOgAAABMAAAAvgAAAHwAAAAOAAAA1gAAAGAAAAAsAAAAtAAAAOgAAAC0AAAAtAAA
        AFIAAACIAAAAwAAAAKQAAACqAAAAngAAAFo0Z///XYb//9zl///2+P//vc7//3iZ//8zZv//M2b/iAAA
        AAYAAAAsAAAALAAAANgAAAA2AAAALAAAAAwAAAAgAAAA2AAAAKIAAACWAAAAAgAAAAAAAAAEAAAAygAA
        AKYAAACmAAAATAAAAFIAAABUAAAAdgAAAK4AAAB+AAAASDNm//8zZv//2+T///f5//+Dov//Zoz//zNm
        //8zZv+IAAAAAAAAAAAAAAAAAAAA0AAAAAoAAAAAAAAAAAAAAAAAAABwAAAA7AAAABQAAAAAAAAAAAAA
        AAQAAADCAAAAagAAAGoAAAAwAAAApAAAAKgAAADEAAAA4gAAAN4AAAB4M2b/6DNm//9pjv//fJ3//zNm
        //8zZv//M2b//zNm/3AAAAAAAAAAAAAAAAAAAABOAAAABAAAAAAAAAAAAAAAAAAAAAwAAAAyAAAAAAAA
        AAAAAAAAAAAAAgAAAEQAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAoAAAAKAAAACgAAAAYyZf5mM2b/yDNm
        /8gzZv/IM2b/yDNm/8gzZv+4M2b/FgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADNm
        /gAzZv8GMmX/BjJl/wYyZf8GMmX/BjNm/wIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////////////////////////////////////////wH/
        //8B////ALisqwDWDOsAxlhrAO/b4QDu62kAgthBAO8cewDvvcEB////gf//////////////////////
        //////////////////////////////////8=
</value>
  </data>
</root>