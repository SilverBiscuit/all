<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YcRuAAAAAElFTkSuQmCC
</value>
  </data>
</root>